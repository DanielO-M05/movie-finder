import { useState } from 'react';
import axios from 'axios';
import './App.css';

const MovieSearch = () => {
  const [movies, setMovies] = useState([]); // Holds list of movies returned
  const [query, setQuery] = useState('');
  const [year, setYear] = useState('');
  const [error, setError] = useState('');

  const fetchMovies = async () => {
    try {

      let url = `http://www.omdbapi.com/?s=${query}&apikey=10b84ae6`;

      if (year.trim()) {
        url +=`&y=${year}`;
      }

      console.log(url);

      const response = await axios.get(url);
      console.log(response); // For debugging
      if (response.data.Response === "True") {
        setMovies(response.data.Search); // Set the list of movies
        setError('');
      } else {
        setError(response.data.Error);
        setMovies([]);
      }
    } catch (error) {
      console.error("Error fetching the movie data:", error);
      setError(error.message.concat(". I pinky promise it's not my fault."));
      setMovies([]);
    }
  };

  const handleSearch = (e) => {
    e.preventDefault();
    fetchMovies();
  };

  return (
    <div>
      <h1> Movie Finder </h1>
      <form onSubmit={handleSearch}>
        <input 
          type="text" 
          value={query} 
          onChange={(e) => setQuery(e.target.value)} 
          placeholder="Search for a movie..."
        />
        
        <input 
          type="text" 
          value={year} 
          onChange={(e) => setYear(e.target.value)} 
          placeholder="Specify a year (optional)"
        /> 
        
        
        <button type="submit">Search</button>
      </form>
      <div>
        {movies && movies.length > 0 ? (
          movies.map((movie) => (
            <div key={movie.imdbID}>
              <h2>{movie.Title}</h2>
              <p>{movie.Year}</p>
              <img src={movie.Poster} alt={movie.Title} />
            </div>
          ))
        ) : (error ? 
          <p> {error} </p> :
          <p>No movies found.</p>
        )}
      </div>
    </div>
  );
};

export default MovieSearch;